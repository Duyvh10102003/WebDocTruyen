// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebDocTruyen.DataAccess;

#nullable disable

namespace WebDocTruyen.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240413052256_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebDocTruyen.Models.BoSuuTap", b =>
                {
                    b.Property<int>("BoSuuTapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoSuuTapId"));

                    b.HasKey("BoSuuTapId");

                    b.ToTable("BoSuuTaps");
                });

            modelBuilder.Entity("WebDocTruyen.Models.ChuongTruyen", b =>
                {
                    b.Property<int>("ChuongTruyenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChuongTruyenId"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("MetaTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuong")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("TruyenId")
                        .HasColumnType("int");

                    b.HasKey("ChuongTruyenId");

                    b.HasIndex("TruyenId");

                    b.ToTable("ChuongTruyens");
                });

            modelBuilder.Entity("WebDocTruyen.Models.LichSuXem", b =>
                {
                    b.Property<int>("LichSuXemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LichSuXemId"));

                    b.HasKey("LichSuXemId");

                    b.ToTable("LichSuXems");
                });

            modelBuilder.Entity("WebDocTruyen.Models.TacGia", b =>
                {
                    b.Property<int>("TacGiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TacGiaId"));

                    b.Property<int>("MetaTitle")
                        .HasColumnType("int");

                    b.Property<string>("TenTacGia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TacGiaId");

                    b.ToTable("TacGias");
                });

            modelBuilder.Entity("WebDocTruyen.Models.TheLoai", b =>
                {
                    b.Property<int>("TheLoaiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TheLoaiId"));

                    b.Property<int>("MetaTitle")
                        .HasColumnType("int");

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TheLoaiId");

                    b.ToTable("TheLoais");
                });

            modelBuilder.Entity("WebDocTruyen.Models.TrangThai", b =>
                {
                    b.Property<int>("TrangThaiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrangThaiId"));

                    b.Property<int>("MetaTitle")
                        .HasColumnType("int");

                    b.Property<string>("TrangThaiTruyen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TrangThaiId");

                    b.ToTable("TrangThais");
                });

            modelBuilder.Entity("WebDocTruyen.Models.Truyen", b =>
                {
                    b.Property<int>("TruyenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TruyenId"));

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LuotXem")
                        .HasColumnType("int");

                    b.Property<int>("MetaTitle")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TacGiaId")
                        .HasColumnType("int");

                    b.Property<string>("TenTruyen")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("TheLoaiId")
                        .HasColumnType("int");

                    b.Property<int?>("TrangThaiId")
                        .HasColumnType("int");

                    b.HasKey("TruyenId");

                    b.HasIndex("TacGiaId");

                    b.HasIndex("TheLoaiId");

                    b.HasIndex("TrangThaiId");

                    b.ToTable("Truyens");
                });

            modelBuilder.Entity("WebDocTruyen.Models.ChuongTruyen", b =>
                {
                    b.HasOne("WebDocTruyen.Models.Truyen", "Truyen")
                        .WithMany("ChuongTruyens")
                        .HasForeignKey("TruyenId");

                    b.Navigation("Truyen");
                });

            modelBuilder.Entity("WebDocTruyen.Models.Truyen", b =>
                {
                    b.HasOne("WebDocTruyen.Models.TacGia", "TacGia")
                        .WithMany("Truyens")
                        .HasForeignKey("TacGiaId");

                    b.HasOne("WebDocTruyen.Models.TheLoai", "TheLoai")
                        .WithMany("Truyens")
                        .HasForeignKey("TheLoaiId");

                    b.HasOne("WebDocTruyen.Models.TrangThai", "TrangThai")
                        .WithMany("Truyens")
                        .HasForeignKey("TrangThaiId");

                    b.Navigation("TacGia");

                    b.Navigation("TheLoai");

                    b.Navigation("TrangThai");
                });

            modelBuilder.Entity("WebDocTruyen.Models.TacGia", b =>
                {
                    b.Navigation("Truyens");
                });

            modelBuilder.Entity("WebDocTruyen.Models.TheLoai", b =>
                {
                    b.Navigation("Truyens");
                });

            modelBuilder.Entity("WebDocTruyen.Models.TrangThai", b =>
                {
                    b.Navigation("Truyens");
                });

            modelBuilder.Entity("WebDocTruyen.Models.Truyen", b =>
                {
                    b.Navigation("ChuongTruyens");
                });
#pragma warning restore 612, 618
        }
    }
}
